function addBack(obj)
%ADDBACK function add linkages and nodes for net graph when and only when
%the include back propagation key is true
% It only works for neural network not test graphs

if obj.includeBackPropagation == true
    if ~isempty(obj.linkage(1).block)
        
        n = numel(obj.linkage) ;
        
        for i = n:-1:1
            
            inIndex = obj.getInputLayerIndex(i, n) ;
            outputDer = cell(1,numel(obj.linkage(n).outputs)) ;
            
            for l = 1:numel(inIndex)
                for o = 1:numel(obj.linkage(inIndex(l)).outputs)
                    outputDer{l} =  ['D' obj.linkage(inIndex(l)).outputs{o}] ;
                end
            end
            
            switch obj.linkage(i).type
                case 'dagnn.ReLU'
                    obj.addLinkage(...
                        [obj.linkage(i).name, 'Back'], ...
                        [obj.linkage(inIndex(l)).outputs, outputDer], ...
                        ['D' obj.nodes(i).name],...
                        obj.linkage(i).block,...
                        obj.linkage(i).type) ;
                    
                case 'dagnn.Concat'
                    obj.addLinkage(...
                        [obj.linkage(i).name, 'Back'], ...
                        outputDer, ...
                        ['D' obj.nodes(i).name],...
                        obj.linkage(i).block,...
                        obj.linkage(i).type) ;
                    
                case 'dagnn.DropOut'
                    obj.addLinkage(...
                        [obj.linkage(i).name, 'Back'], ...
                        outputDer, ...
                        ['D' obj.nodes(i).name],...
                        obj.linkage(i).block,...
                        obj.linkage(i).type) ;
                    
                otherwise
                    obj.addLinkage(...
                        [obj.linkage(i).name, 'Back'], ...
                        [obj.linkage(inIndex(l)).inputs, outputDer], ...
                        ['D' obj.nodes(i).name],...
                        obj.linkage(i).block,...
                        obj.linkage(i).type) ;
                    
            end
        end
    else
        n = numel(obj.linkage) ;
        for i = n:-1:1
            inIndex = obj.getInputLayerIndex(i, n) ;
            outputDer = cell(1,numel(obj.linkage(n).outputs)) ;
            
            for l = 1:numel(inIndex)
                for o = 1:numel(obj.linkage(inIndex(l)).outputs)
                    outputDer{l} =  ['D' obj.linkage(inIndex(l)).outputs{o}] ;
                end
            end
            
            obj.addLinkage(...
                [sprintf('%d', obj.linkage(i).name) 'Back'], ...
                [obj.linkage(inIndex(l)).inputs, outputDer], ...
                ['D' obj.nodes(i).name],...
                obj.linkage(i).block,...
                obj.linkage(i).type) ;
        end
    end
    
end

